<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.FoodsMapper">

    <sql id="Base_Column_List">
        id,name,cover,descr,skills,user_id,time,count,material,steps,status,category
    </sql>

    <select id="selectAll" resultType="com.example.entity.Foods">
        select foods.*,user.name as userName
        from foods
        left join user
        on foods.user_id = user.id
        <where>
            <if test="name != null"> and foods.name like concat('%', #{name}, '%')</if>
            <if test="status != null"> and foods.status = '审核通过'</if>
            <if test="userId != null"> and foods.user_id = #{userId}</if>
            <if test="category != null"> and foods.category = #{category}</if>
        </where>
        order by foods.id desc
    </select>

    <select id="selectById" resultType="com.example.entity.Foods">
        select foods.*,user.name as userName, user.avatar as avatar
        from foods
        left join user
        on foods.user_id = user.id
        where foods.id = #{id}
    </select>
    <select id="selectTop10" resultType="com.example.entity.Foods">
        select foods.*,user.name as userName
        from foods
        left join user
        on foods.user_id = user.id
        where status = '审核通过'
        order by count desc
        limit 10
    </select>
    <select id="selectCollect" resultType="com.example.entity.Foods">
        select foods.*, user.name as userName, user.avatar as avatar
        from collect
        left join foods
        on collect.fid = foods.id
        left join user
        on foods.user_id = user.id
        where collect.module = '食谱' and collect.user_id = #{userId}
        order by collect.id desc
    </select>


    <delete id="deleteById">
        delete from foods
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Foods" useGeneratedKeys="true" keyProperty="id">
        insert into foods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="cover != null">cover,</if>
            <if test="descr != null">descr,</if>
            <if test="skills != null">skills,</if>
            <if test="userId != null">user_id,</if>
            <if test="time != null">time,</if>
            <if test="count != null">count,</if>
            <if test="material != null">material,</if>
            <if test="steps != null">steps,</if>
            <if test="status != null">status,</if>
            <if test="category != null">category,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null">#{name},</if>
            <if test="cover != null">#{cover},</if>
            <if test="descr != null">#{descr},</if>
            <if test="skills != null">#{skills},</if>
            <if test="userId != null">#{userId},</if>
            <if test="time != null">#{time},</if>
            <if test="count != null">#{count},</if>
            <if test="material != null">#{material},</if>
            <if test="steps != null">#{steps},</if>
            <if test="status != null">#{status},</if>
            <if test="category != null">#{category},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Foods">
        update foods
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="cover != null">
                cover = #{cover},
            </if>
            <if test="descr != null">
                descr = #{descr},
            </if>
            <if test="skills != null">
                skills = #{skills},
            </if>
            <if test="material != null">
                material = #{material},
            </if>
            <if test="steps != null">
                steps = #{steps},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="count != null">
                count = #{count},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>