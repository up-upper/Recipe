{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AddFoods\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择分类',\n          trigger: 'blur'\n        }],\n        descr: [{\n          required: true,\n          message: '请输入简介',\n          trigger: 'blur'\n        }],\n        skills: [{\n          required: true,\n          message: '请输入技巧',\n          trigger: 'blur'\n        }]\n      },\n      goodsList: [],\n      stepList: []\n    };\n  },\n  created() {\n    this.loadCategory();\n    this.load();\n  },\n  methods: {\n    load() {\n      if (this.id) {\n        this.$request.get('/foods/selectById/' + this.id).then(res => {\n          this.form = res.data || {};\n          this.goodsList = JSON.parse(this.form.goods || '[]'); // JSON.parse解析json字符串\n          this.stepList = JSON.parse(this.form.steps || '[]');\n        });\n      }\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          if (!this.goodsList.length) {\n            this.$message.warning('食材不能为空');\n            return;\n          }\n          if (!this.stepList.length) {\n            this.$message.warning('步骤不能为空');\n            return;\n          }\n          this.form.goods = JSON.stringify(this.goodsList);\n          this.form.steps = JSON.stringify(this.stepList); // 把json数组转成json字符串存到数据库\n          this.form.userId = this.user.id;\n          if (this.form.id) {\n            this.$request.put('/foods/update', this.form).then(res => {\n              if (res.code === '200') {\n                // 表示操作成功\n                this.$message.success('操作成功');\n                this.$router.push('/front/UserFoods');\n              } else {\n                this.$message.error(res.msg); // 弹出错误的信息\n              }\n            });\n          } else {\n            this.$request.post('/foods/add', this.form).then(res => {\n              if (res.code === '200') {\n                // 表示操作成功\n                this.$message.success('操作成功');\n                //location.href = '/front/addFoods?id=' + res.data.id\n                this.$router.push('/front/UserFoods');\n              } else {\n                this.$message.error(res.msg); // 弹出错误的信息\n              }\n            });\n          }\n        }\n      });\n      load();\n    },\n    delStep(index) {\n      this.stepList.splice(index, 1);\n    },\n    addStep() {\n      this.stepList.push({\n        img: '',\n        text: ''\n      });\n    },\n    delgoods(index) {\n      this.goodsList.splice(index, 1);\n    },\n    addgoods() {\n      this.goodsList.push({\n        name: '',\n        value: ''\n      });\n    },\n    loadCategory() {\n      this.$request.get('/category/selectAll').then(res => {\n        this.categoryList = res.data || [];\n      });\n    },\n    handleCoverSuccess(res) {\n      this.form.cover = res.data;\n    },\n    handleStepImgSuccess(response, file, fileList, item) {\n      item.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","id","$route","query","user","JSON","parse","localStorage","getItem","categoryList","form","rules","required","message","trigger","category","descr","skills","goodsList","stepList","created","loadCategory","load","methods","$request","get","then","res","goods","steps","save","$refs","formRef","validate","valid","length","$message","warning","stringify","userId","put","code","success","$router","push","error","msg","post","delStep","index","splice","addStep","img","text","delgoods","addgoods","value","handleCoverSuccess","cover","handleStepImgSuccess","response","file","fileList","item"],"sources":["src/views/front/AddFoods.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 50%; margin: 10px auto\">\r\n    <div class=\"card\">\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"name\" label=\"名称\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\" placeholder=\"请输入名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"category\" label=\"分类\">\r\n          <el-select v-model=\"form.category\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-upload\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleCoverSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传封面</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item prop=\"descr\" label=\"简介\">\r\n          <el-input type=\"textarea\" v-model=\"form.descr\" autocomplete=\"off\" placeholder=\"请输入简介\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"skills\" label=\"技巧\">\r\n          <el-input type=\"textarea\" v-model=\"form.skills\" autocomplete=\"off\" placeholder=\"请输入技巧\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"食材\">\r\n          <div style=\"display: flex; align-items: center; margin-bottom: 5px\" v-for=\"(item, index) in goodsList\" :key=\"index\">\r\n            <el-input style=\"flex: 1;\" v-model=\"item.name\" placeholder=\"请输入食材名称\"></el-input>\r\n            <el-input style=\"flex: 1;  margin-left: 10px\"  v-model=\"item.value\" placeholder=\"请输入食材分量\"></el-input>\r\n            <i @click=\"delgoods(index)\" class=\"el-icon-delete\" style=\"margin-left: 10px; cursor: pointer\"></i>\r\n          </div>\r\n          <div><span style=\"color: #2a60c9; font-size: 14px; cursor: pointer\" @click=\"addgoods\">添加新的食材</span></div>\r\n        </el-form-item>\r\n        <el-form-item label=\"步骤\">\r\n          <div style=\"display: flex; align-items: center; margin-bottom: 5px\" v-for=\"(item, index) in stepList\" :key=\"index\">\r\n            <el-upload\r\n                :action=\"$baseUrl + '/files/upload'\"\r\n                :headers=\"{ token: user.token }\"\r\n                :on-success=\"(response, file, fileList) => handleStepImgSuccess(response, file, fileList, item)\"\r\n                :show-file-list=\"false\"\r\n            >\r\n              <img v-if=\"item.img\" :src=\"item.img\" alt=\"\" style=\"width: 50px; height: 50px\">\r\n              <el-button v-else type=\"primary\">上传图片</el-button>\r\n            </el-upload>\r\n            <el-input style=\"flex: 1;  margin-left: 10px\"  v-model=\"item.value\" placeholder=\"请填写步骤\"></el-input>\r\n            <i @click=\"delStep(index)\" class=\"el-icon-delete\" style=\"margin-left: 10px; cursor: pointer\"></i>\r\n          </div>\r\n          <div><span style=\"color: #2a60c9; font-size: 14px; cursor: pointer\" @click=\"addStep\">添加新的步骤</span></div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align: center; margin-top: 20px\">\r\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AddFoods\",\r\n  data() {\r\n    return {\r\n      id: this.$route.query.id,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      categoryList: [],\r\n      form: {},\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入名称', trigger: 'blur' },\r\n        ],\r\n        category: [\r\n          { required: true, message: '请选择分类', trigger: 'blur' },\r\n        ],\r\n        descr: [\r\n          { required: true, message: '请输入简介', trigger: 'blur' },\r\n        ],\r\n        skills: [\r\n          { required: true, message: '请输入技巧', trigger: 'blur' },\r\n        ]\r\n      },\r\n      goodsList: [],\r\n      stepList: []\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCategory()\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      if (this.id) {\r\n        this.$request.get('/foods/selectById/' + this.id).then(res => {\r\n          this.form = res.data || {}\r\n          this.goodsList = JSON.parse(this.form.goods || '[]')  // JSON.parse解析json字符串\r\n          this.stepList = JSON.parse(this.form.steps || '[]')\r\n        })\r\n      }\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          if (!this.goodsList.length) {\r\n            this.$message.warning('食材不能为空')\r\n            return\r\n          }\r\n          if (!this.stepList.length) {\r\n            this.$message.warning('步骤不能为空')\r\n            return\r\n          }\r\n          this.form.goods = JSON.stringify(this.goodsList)\r\n          this.form.steps = JSON.stringify(this.stepList)  // 把json数组转成json字符串存到数据库\r\n          this.form.userId = this.user.id\r\n          if (this.form.id) {\r\n            this.$request.put('/foods/update', this.form).then(res => {\r\n              if (res.code === '200') {   // 表示操作成功\r\n                this.$message.success('操作成功')\r\n                this.$router.push('/front/UserFoods')\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          } else {\r\n            this.$request.post('/foods/add', this.form).then(res => {\r\n              if (res.code === '200') {   // 表示操作成功\r\n                this.$message.success('操作成功')\r\n                //location.href = '/front/addFoods?id=' + res.data.id\r\n                this.$router.push('/front/UserFoods')\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n      load();\r\n    },\r\n    delStep(index) {\r\n      this.stepList.splice(index, 1)\r\n    },\r\n    addStep() {\r\n      this.stepList.push({ img: '', text: '' })\r\n    },\r\n    delgoods(index) {\r\n      this.goodsList.splice(index, 1)\r\n    },\r\n    addgoods() {\r\n      this.goodsList.push({ name: '', value: '' })\r\n    },\r\n    loadCategory() {\r\n      this.$request.get('/category/selectAll').then(res => {\r\n        this.categoryList = res.data || []\r\n      })\r\n    },\r\n    handleCoverSuccess(res) {\r\n      this.form.cover = res.data\r\n    },\r\n    handleStepImgSuccess(response, file, fileList, item) {\r\n      item.img = response.data\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}