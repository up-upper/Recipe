{"ast":null,"code":"import E from 'wangeditor';\nexport default {\n  name: \"addNotebook\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }]\n      },\n      editor: null\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    load() {\n      if (this.id) {\n        // 编辑\n        this.$request.get('/notebook/selectById/' + this.id).then(res => {\n          this.form = res.data || {};\n          this.setRichText(this.form.content || '');\n        });\n      } else {\n        // 新增\n        this.setRichText('');\n      }\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.userId = this.user.id;\n          this.form.content = this.editor.txt.html();\n          if (this.form.id) {\n            this.$request.put('/notebook/update', this.form).then(res => {\n              if (res.code === '200') {\n                // 表示操作成功\n                this.$message.success('操作成功');\n              } else {\n                this.$message.error(res.msg); // 弹出错误的信息\n              }\n            });\n          } else {\n            this.$request.post('/notebook/add', this.form).then(res => {\n              if (res.code === '200') {\n                // 表示操作成功\n                this.$message.success('操作成功');\n                location.href = '/front/addNotebook?id=' + res.data.id;\n              } else {\n                this.$message.error(res.msg); // 弹出错误的信息\n              }\n            });\n          }\n        }\n      });\n    },\n    handleCoverSuccess(res) {\n      this.form.cover = res.data;\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create(); // 创建\n        this.editor.txt.html(html);\n      });\n    }\n  }\n};","map":{"version":3,"names":["E","name","data","id","$route","query","user","JSON","parse","localStorage","getItem","form","rules","required","message","trigger","editor","mounted","load","methods","$request","get","then","res","setRichText","content","save","$refs","formRef","validate","valid","userId","txt","html","put","code","$message","success","error","msg","post","location","href","handleCoverSuccess","cover","$nextTick","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","create"],"sources":["src/views/front/AddNotebook.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 50%; margin: 10px auto\">\r\n    <div class=\"card\">\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"title\" label=\"标题\">\r\n          <el-input v-model=\"form.title\" autocomplete=\"off\" placeholder=\"请输入标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-upload\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleCoverSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传封面</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <div id=\"editor\"></div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align: center; margin-top: 20px\">\r\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport E from 'wangeditor'\r\nexport default {\r\n  name: \"addNotebook\",\r\n  data() {\r\n    return {\r\n      id: this.$route.query.id,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      form: {},\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入标题', trigger: 'blur' },\r\n        ],\r\n      },\r\n      editor: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      if (this.id) {  // 编辑\r\n        this.$request.get('/notebook/selectById/' + this.id).then(res => {\r\n          this.form = res.data || {}\r\n          this.setRichText(this.form.content || '')\r\n        })\r\n      } else {  // 新增\r\n        this.setRichText('')\r\n      }\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.userId = this.user.id\r\n          this.form.content = this.editor.txt.html()\r\n          if (this.form.id) {\r\n            this.$request.put('/notebook/update', this.form).then(res => {\r\n              if (res.code === '200') {   // 表示操作成功\r\n                this.$message.success('操作成功')\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          } else {\r\n            this.$request.post('/notebook/add', this.form).then(res => {\r\n              if (res.code === '200') {   // 表示操作成功\r\n                this.$message.success('操作成功')\r\n                location.href = '/front/addNotebook?id=' + res.data.id\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleCoverSuccess(res) {\r\n      this.form.cover = res.data\r\n    },\r\n    setRichText(html) {\r\n      this.$nextTick(() => {\r\n        this.editor = new E(`#editor`)\r\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\r\n        this.editor.config.uploadFileName = 'file'\r\n        this.editor.config.uploadImgHeaders = {\r\n          token: this.user.token\r\n        }\r\n        this.editor.config.uploadImgParams = {\r\n          type: 'img',\r\n        }\r\n        this.editor.create()  // 创建\r\n        this.editor.txt.html(html)\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAiCA,OAAAA,CAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACAG,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,IAAA;MACAC,KAAA;QACAX,IAAA,GACA;UAAAY,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,SAAAf,EAAA;QAAA;QACA,KAAAiB,QAAA,CAAAC,GAAA,gCAAAlB,EAAA,EAAAmB,IAAA,CAAAC,GAAA;UACA,KAAAZ,IAAA,GAAAY,GAAA,CAAArB,IAAA;UACA,KAAAsB,WAAA,MAAAb,IAAA,CAAAc,OAAA;QACA;MACA;QAAA;QACA,KAAAD,WAAA;MACA;IACA;IACAE,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAnB,IAAA,CAAAoB,MAAA,QAAAzB,IAAA,CAAAH,EAAA;UACA,KAAAQ,IAAA,CAAAc,OAAA,QAAAT,MAAA,CAAAgB,GAAA,CAAAC,IAAA;UACA,SAAAtB,IAAA,CAAAR,EAAA;YACA,KAAAiB,QAAA,CAAAc,GAAA,0BAAAvB,IAAA,EAAAW,IAAA,CAAAC,GAAA;cACA,IAAAA,GAAA,CAAAY,IAAA;gBAAA;gBACA,KAAAC,QAAA,CAAAC,OAAA;cACA;gBACA,KAAAD,QAAA,CAAAE,KAAA,CAAAf,GAAA,CAAAgB,GAAA;cACA;YACA;UACA;YACA,KAAAnB,QAAA,CAAAoB,IAAA,uBAAA7B,IAAA,EAAAW,IAAA,CAAAC,GAAA;cACA,IAAAA,GAAA,CAAAY,IAAA;gBAAA;gBACA,KAAAC,QAAA,CAAAC,OAAA;gBACAI,QAAA,CAAAC,IAAA,8BAAAnB,GAAA,CAAArB,IAAA,CAAAC,EAAA;cACA;gBACA,KAAAiC,QAAA,CAAAE,KAAA,CAAAf,GAAA,CAAAgB,GAAA;cACA;YACA;UACA;QACA;MACA;IACA;IACAI,mBAAApB,GAAA;MACA,KAAAZ,IAAA,CAAAiC,KAAA,GAAArB,GAAA,CAAArB,IAAA;IACA;IACAsB,YAAAS,IAAA;MACA,KAAAY,SAAA;QACA,KAAA7B,MAAA,OAAAhB,CAAA;QACA,KAAAgB,MAAA,CAAA8B,MAAA,CAAAC,eAAA,QAAAC,QAAA;QACA,KAAAhC,MAAA,CAAA8B,MAAA,CAAAG,cAAA;QACA,KAAAjC,MAAA,CAAA8B,MAAA,CAAAI,gBAAA;UACAC,KAAA,OAAA7C,IAAA,CAAA6C;QACA;QACA,KAAAnC,MAAA,CAAA8B,MAAA,CAAAM,eAAA;UACAC,IAAA;QACA;QACA,KAAArC,MAAA,CAAAsC,MAAA;QACA,KAAAtC,MAAA,CAAAgB,GAAA,CAAAC,IAAA,CAAAA,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}